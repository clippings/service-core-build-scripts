final COVERAGE_EXCLUDES = project.ext.has('coverage_excludes')
        ? project.ext['coverage_excludes']
        : [
        'com/dt/**/dto/*', 'com/dt/**/api/*', // usually autogenerated code
        'com/dt/**/Constants*', // this is just a bunch of constants
        'com/dt/**/*Exception*', // exception coverage is overkill
]


jacocoTestReport {
    onlyIf { !project.hasProperty('skipCoverage') }
    dependsOn test
    finalizedBy jacocoTestCoverageVerification

    // add exclusions
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: COVERAGE_EXCLUDES)
        }))
    }
}

jacocoTestCoverageVerification {
    onlyIf { !project.hasProperty('skipCoverage') }
    dependsOn jacocoTestReport

    violationRules {
        rule {
            // enabled = false
            element = 'BUNDLE'
            excludes = COVERAGE_EXCLUDES

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }
    }
}

test.finalizedBy jacocoTestReport

