apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    // spring dependencies, use the starters - they guarantee compatibility
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // prometheus metrics
    implementation("io.micrometer:micrometer-registry-prometheus")
    // json-formatted log file
    implementation "net.logstash.logback:logstash-logback-encoder:${findProperty('logstash_logback_encoder.version') ?: '7.2'}"
    // support for json-patch is optional
    implementation "com.github.java-json-tools:json-patch:${findProperty('json_patch.version') ?: '1.13'}"
    // dev
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // testing
    implementation platform("org.testcontainers:testcontainers-bom:${findProperty('testcontainers.version') ?: '1.17.3'}")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:junit-jupiter"
}

// by default start with dev profile, that enables local DB and text-based logging
bootRun {
    args = ['--spring.profiles.active=dev']
}

// generate META-INF/build-info.properties used by Actuator
springBoot {
    buildInfo()
}

test {
    onlyIf { !project.hasProperty('skipTest') }
    useJUnitPlatform()
}
